
* Create database EMP and Make Collection With name "EMPL" and Follow Queries 

*Created Database
> use emp
 switched to DB emp
 
*Create Collection
> db.createCollection("empl")

*Insert Records Into EMPL Collection
> db.empl.insert([
...  {no:1,name:"ST",salary:2000,role:"OB"},
...  {no:2,name:"MSD",salary:1500,role:"WK"},
...  {no:3,name:"YS",salary:1000,role:"ALR"},
...  {no:4,name:"RD",salary:1000,role:"MOB"},
...  {no:5,name:"RS",salary:500,role:"OB"},
...  {no:6,name:"BK",salary:500,role:"MOB"},
...  {no:7,name:"VK",salary:300,role:"BW"},
...  {no:8,name:"JB",salary:400,role:"BW"},
...  {no:9,name:"HP",salary:400,role:"ALR"},
...  {no:10,name:"VS",salary:300,role:"OB"}]);
BulkWriteResult({
        "writeErrors" : [ ],
        "writeConcernErrors" : [ ],
        "nInserted" : 10,
        "nUpserted" : 0,
        "nMatched" : 0,
        "nModified" : 0,
        "nRemoved" : 0,
        "upserted" : [ ]
})
------------------------------------------------------
*Update Salary Of Employee where Name is "ST" by +8000
-------------------------------------------------------
> db.empl.updateOne({"name" : "ST"},{$inc : {"salary":8000}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 10000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 1500, "role" : "WK" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 1000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 1000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 500, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 300, "role" : "OB" }
>
------------------------------------------------------------
*Update Salary Of All Employee by giving an increment of +4000 each
-------------------------------------------------------------
> db.empl.update({},{$inc : {"salary":4000}},{multi:true});
WriteResult({ "nMatched" : 10, "nUpserted" : 0, "nModified" : 10 })
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "WK" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>


*update role of "MSD" as "C and WK"
------------------------------------
> db.empl.updateOne({"name" : "MSD"}, {$set :{role : "C"}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>


*Add a New Field remark to document with name "RS" set Remark as WC
-------------------------------------------------------------------
> db.empl.updateOne({name:"RS"},{$set:{remark : "WC"}});
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>

*Add a New Field As Number 11,name AK,Salary 10000,
role coch without using insert statement. But for Doing 
So You should have a Record Added woth number 11.
-------------------------------------------------------
> db.empl.updateOne({"no" : 11},{$set:{name : "AK", salary : 10000 , role : "coach"}},{upsert:true});
{
        "acknowledged" : true,
        "matchedCount" : 0,
        "modifiedCount" : 0,
        "upsertedId" : ObjectId("6112963c17125700368f0297")
}
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
{ "_id" : ObjectId("6112963c17125700368f0297"), "no" : 11, "name" : "AK", "role" : "coach", "salary" : 10000 }
>
-----------------------------
*remove added New Field
------------------------------
> db.empl.remove({no:11})
WriteResult({ "nRemoved" : 1 })
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 5000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>
------------------------------------------------------
*Update the Field "RD" by multiplying with salary by 2
-------------------------------------------------------
> db.empl.update({name:"RD"},{$mul : {salary : 2}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.empl.find();
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c41"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
{ "_id" : ObjectId("61128f13318a279658339c42"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>
-------------------------------------------------
*To Find Document From the empl collection where name
 begins with S
 -------------------------------------------------
 > db.empl.find({name: /^S/});
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
>
----------------------------------------------
*To Find Document From the empl collection where name
 begins with R
----------------------------------------
> db.empl.find({name: /^R/});
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
-----------------------------------------
*To Find Document From the empl collection where name 
ends with K
-------------------------------------------------
> db.empl.find({name: /K$/});
{ "_id" : ObjectId("61128f13318a279658339c3f"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
{ "_id" : ObjectId("61128f13318a279658339c40"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }


--------------------------------------------
*To Find Document From the empl collection where name 
ends with D
> db.empl.find({name: /D$/});
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3d"), "no" : 4, "name" : "RD", "salary" : 10000, "role" : "MOB" }
>
------------------------------------------------
*To Find Document From the empl collection where name 
has S in any position
----------------------------
> db.empl.find({name: /S/});
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Regular Expression
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

(Note: Use Case sensitive allow For that write in Option: "i")

* To Find Document From the empl collection
 where name begins with S
 -----------------------------------
 > db.empl.find({name: {$regex: /S/}});
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>

* To Find Document From the empl collection where name 
begins with S
-------------------------------------
> db.empl.find({name: {$regex: /S/}});
{ "_id" : ObjectId("61128f13318a279658339c3a"), "no" : 1, "name" : "ST", "salary" : 22000, "role" : "OB" }
{ "_id" : ObjectId("61128f13318a279658339c3b"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C" }
{ "_id" : ObjectId("61128f13318a279658339c3c"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
{ "_id" : ObjectId("61128f13318a279658339c3e"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }
{ "_id" : ObjectId("61128f13318a279658339c43"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }
>
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 Use of $in and $nin (in and notin)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
(Note: There will not use {} braces in that $in and $nin)

* Display Documents where in empl collection Field have
 OB,MOB 
---------------------------------------------------------


* Display Documents where in empl collection Field not
 have OB,MOB
----------------------------------------------------------